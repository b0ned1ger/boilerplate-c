==2314== Memcheck, a memory error detector
==2314== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2314== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2314== Command: ./run
==2314== 
==2314== Warning: invalid file descriptor -1 in syscall read()
==2314== Warning: invalid file descriptor -1 in syscall close()
==2314== Warning: invalid file descriptor -1 in syscall read()
Data readed from file: (null)==2314== 
==2314== HEAP SUMMARY:
==2314==     in use at exit: 2,048 bytes in 2 blocks
==2314==   total heap usage: 3 allocs, 1 frees, 3,072 bytes allocated
==2314== 
==2314== LEAK SUMMARY:
==2314==    definitely lost: 2,048 bytes in 2 blocks
==2314==    indirectly lost: 0 bytes in 0 blocks
==2314==      possibly lost: 0 bytes in 0 blocks
==2314==    still reachable: 0 bytes in 0 blocks
==2314==         suppressed: 0 bytes in 0 blocks
==2314== Rerun with --leak-check=full to see details of leaked memory
==2314== 
==2314== For counts of detected and suppressed errors, rerun with: -v
==2314== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)




==2343== Memcheck, a memory error detector
==2343== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2343== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2343== Command: ./run
==2343== 
--2343-- Valgrind options:
--2343--    -v
--2343-- Contents of /proc/version:
--2343--   Linux version 4.15.0-33-generic (buildd@lgw01-amd64-010) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10)) #36~16.04.1-Ubuntu SMP Wed Aug 15 17:21:05 UTC 2018
--2343-- 
--2343-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--2343-- Page sizes: currently 4096, max supported 4096
--2343-- Valgrind library directory: /usr/local/lib/valgrind
--2343-- Reading syms from /home/kajus/Documents/School/Socket-communication-c/run
--2343-- Reading syms from /lib/x86_64-linux-gnu/ld-2.23.so
--2343--   Considering /lib/x86_64-linux-gnu/ld-2.23.so ..
--2343--   .. CRC mismatch (computed aa979a42 wanted 9019bbb7)
--2343--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.23.so ..
--2343--   .. CRC is valid
--2343-- Reading syms from /usr/local/lib/valgrind/memcheck-amd64-linux
--2343--    object doesn't have a dynamic symbol table
--2343-- Scheduler: using generic scheduler lock implementation.
--2343-- Reading suppressions file: /usr/local/lib/valgrind/default.supp
==2343== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-2343-by-kajus-on-???
==2343== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-2343-by-kajus-on-???
==2343== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-2343-by-kajus-on-???
==2343== 
==2343== TO CONTROL THIS PROCESS USING vgdb (which you probably
==2343== don't want to do, unless you know exactly what you're doing,
==2343== or are doing some strange experiment):
==2343==   /usr/local/lib/valgrind/../../bin/vgdb --pid=2343 ...command...
==2343== 
==2343== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==2343==   /path/to/gdb ./run
==2343== and then give GDB the following command
==2343==   target remote | /usr/local/lib/valgrind/../../bin/vgdb --pid=2343
==2343== --pid is optional if only one valgrind process is running
==2343== 
--2343-- REDIR: 0x401cfd0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580a1e91 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--2343-- REDIR: 0x401b920 (ld-linux-x86-64.so.2:index) redirected to 0x580a1eab (vgPlain_amd64_linux_REDIR_FOR_index)
--2343-- Reading syms from /usr/local/lib/valgrind/vgpreload_core-amd64-linux.so
--2343-- Reading syms from /usr/local/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==2343== WARNING: new redirection conflicts with existing -- ignoring it
--2343--     old: 0x0401cfd0 (strlen              ) R-> (0000.0) 0x580a1e91 vgPlain_amd64_linux_REDIR_FOR_strlen
--2343--     new: 0x0401cfd0 (strlen              ) R-> (2007.0) 0x04c30ad0 strlen
--2343-- REDIR: 0x401bb40 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c31b80 (strcmp)
--2343-- REDIR: 0x401dd30 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c34d60 (mempcpy)
--2343-- Reading syms from /lib/x86_64-linux-gnu/libc-2.23.so
--2343--   Considering /lib/x86_64-linux-gnu/libc-2.23.so ..
--2343--   .. CRC mismatch (computed 7a8ee3e4 wanted a5190ac4)
--2343--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.23.so ..
--2343--   .. CRC is valid
--2343-- REDIR: 0x4ec9a00 (libc.so.6:strcasecmp) redirected to 0x4a28770 (_vgnU_ifunc_wrapper)
--2343-- REDIR: 0x4ec5280 (libc.so.6:strcspn) redirected to 0x4a28770 (_vgnU_ifunc_wrapper)
--2343-- REDIR: 0x4ecbcf0 (libc.so.6:strncasecmp) redirected to 0x4a28770 (_vgnU_ifunc_wrapper)
--2343-- REDIR: 0x4ec76f0 (libc.so.6:strpbrk) redirected to 0x4a28770 (_vgnU_ifunc_wrapper)
--2343-- REDIR: 0x4ec7a80 (libc.so.6:strspn) redirected to 0x4a28770 (_vgnU_ifunc_wrapper)
--2343-- REDIR: 0x4ec914b (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a28770 (_vgnU_ifunc_wrapper)
--2343-- REDIR: 0x4ec7400 (libc.so.6:rindex) redirected to 0x4c30450 (rindex)
--2343-- REDIR: 0x4ebe130 (libc.so.6:malloc) redirected to 0x4c2db6f (malloc)
==2343== Warning: invalid file descriptor -1 in syscall read()
==2343==    at 0x4F31260: __read_nocancel (syscall-template.S:84)
==2343==    by 0x400682: getData (in /home/kajus/Documents/School/Socket-communication-c/run)
==2343==    by 0x4006C7: main (in /home/kajus/Documents/School/Socket-communication-c/run)
--2343-- REDIR: 0x4ed0760 (libc.so.6:strchrnul) redirected to 0x4c34890 (strchrnul)
--2343-- REDIR: 0x4ec93b0 (libc.so.6:__GI_mempcpy) redirected to 0x4c34a90 (__GI_mempcpy)
==2343== Warning: invalid file descriptor -1 in syscall close()
==2343==    at 0x4F318F0: __close_nocancel (syscall-template.S:84)
==2343==    by 0x4006EB: main (in /home/kajus/Documents/School/Socket-communication-c/run)
==2343== Warning: invalid file descriptor -1 in syscall read()
==2343==    at 0x4F31260: __read_nocancel (syscall-template.S:84)
==2343==    by 0x400682: getData (in /home/kajus/Documents/School/Socket-communication-c/run)
==2343==    by 0x4006F5: main (in /home/kajus/Documents/School/Socket-communication-c/run)
Data readed from file: (null)--2343-- REDIR: 0x4ebe4f0 (libc.so.6:free) redirected to 0x4c2ec69 (free)
==2343== 
==2343== HEAP SUMMARY:
==2343==     in use at exit: 2,048 bytes in 2 blocks
==2343==   total heap usage: 3 allocs, 1 frees, 3,072 bytes allocated
==2343== 
==2343== Searching for pointers to 2 not-freed blocks
==2343== Checked 62,096 bytes
==2343== 
==2343== LEAK SUMMARY:
==2343==    definitely lost: 2,048 bytes in 2 blocks
==2343==    indirectly lost: 0 bytes in 0 blocks
==2343==      possibly lost: 0 bytes in 0 blocks
==2343==    still reachable: 0 bytes in 0 blocks
==2343==         suppressed: 0 bytes in 0 blocks
==2343== Rerun with --leak-check=full to see details of leaked memory
==2343== 
==2343== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==2343== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)






==2665== Memcheck, a memory error detector
==2665== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2665== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2665== Command: ./run2
==2665== 
==2665== Warning: invalid file descriptor -1 in syscall read()
==2665== Warning: invalid file descriptor -1 in syscall read()
==2665== Warning: invalid file descriptor -1 in syscall close()
Data readed from file: (null)==2665== 
==2665== HEAP SUMMARY:
==2665==     in use at exit: 0 bytes in 0 blocks
==2665==   total heap usage: 3 allocs, 3 frees, 3,072 bytes allocated
==2665== 
==2665== All heap blocks were freed -- no leaks are possible
==2665== 
==2665== For counts of detected and suppressed errors, rerun with: -v
==2665== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <string.h>
#include <sys/types.h>
#include <unistd.h>
#include <fcntl.h>

#define BLOCK_SIZE 1024

char* getData(int fd) {
        char* buf = (char*) malloc(BLOCK_SIZE);
        if (!buf) {
                return NULL;
        }
        if (read(fd, buf, BLOCK_SIZE) != BLOCK_SIZE) {

                return NULL;
        }
        return buf;
}

int main(int argc, char *argv[])
{
        int fd;
        char* data;

        fd = open("/tmp/test.txt", O_WRONLY | O_APPEND);

        data = getData(fd);

        printf("Data readed from file: %s", data);

        close(fd);

        data = getData(fd);

        return 0;
}


#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <string.h>
#include <sys/types.h>
#include <unistd.h>
#include <fcntl.h>

#define BLOCK_SIZE 1024

char* getData(int fd) {
        char* buf = (char*) malloc(BLOCK_SIZE);
        if (!buf) {
                return NULL;
        }
        if (read(fd, buf, BLOCK_SIZE) != BLOCK_SIZE) {
                free(buf);
                return NULL;
        }
        return buf;
}

int main(int argc, char *argv[])
{
        int fd;
        char* data;

        fd = open("/tmp/test.txt", O_WRONLY | O_APPEND);

        data = getData(fd);

        printf("Data readed from file: %s", data);


        data = getData(fd);
        close(fd);

        return 0;
}
